diff --git a/README.rst b/README.rst
index 787279ce0..e348db445 100644
--- a/README.rst
+++ b/README.rst
@@ -1,3 +1,10 @@
+This fork of Web3J adds a function in the generated Solidity code for
+each Solidity function: "getRLP_". The function returns the RLP encoding
+of the function selector (truncated message digest of the function signature)
+and the function parameters. This is intended to be used with Layer Two Atomic
+Cross-Blockchain Function Calls.
+
+
 .. To build this file locally ensure docutils Python package is installed and run:
    $ rst2html.py README.rst README.html
 
diff --git a/codegen/build.gradle b/codegen/build.gradle
index 36f9c815f..5856c4503 100644
--- a/codegen/build.gradle
+++ b/codegen/build.gradle
@@ -10,3 +10,6 @@ dependencies {
     implementation("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
     implementation("org.junit.vintage:junit-vintage-engine:$junitVersion")
 }
+
+apply plugin: 'application'
+application { mainClassName = 'org.web3j.codegen.SolidityFunctionWrapperGenerator' }
diff --git a/codegen/src/main/java/org/web3j/codegen/SolidityFunctionWrapper.java b/codegen/src/main/java/org/web3j/codegen/SolidityFunctionWrapper.java
index 01f683fd6..04891fd2e 100644
--- a/codegen/src/main/java/org/web3j/codegen/SolidityFunctionWrapper.java
+++ b/codegen/src/main/java/org/web3j/codegen/SolidityFunctionWrapper.java
@@ -1177,6 +1177,13 @@ MethodSpec buildFunction(AbiDefinition functionDefinition, boolean useUpperCase)
             results.add(methodBuilder.build());
         }
 
+        // Create function that returns the RLP of the Solidity function call.
+        functionName = "getRLP_" + functionName;
+        methodBuilder = MethodSpec.methodBuilder(functionName).addModifiers(Modifier.PUBLIC);
+        addParameters(methodBuilder, functionDefinition.getInputs());
+        buildRlpFunction(functionDefinition, methodBuilder, inputParams, useUpperCase);
+        results.add(methodBuilder.build());
+
         return results;
     }
 
@@ -1352,6 +1359,35 @@ private void buildTransactionFunction(
         }
     }
 
+    private void buildRlpFunction(
+            AbiDefinition functionDefinition,
+            MethodSpec.Builder methodBuilder,
+            String inputParams,
+            boolean useUpperCase)
+            throws ClassNotFoundException {
+
+        if (functionDefinition.isPayable()) {
+            methodBuilder.addParameter(BigInteger.class, WEI_VALUE);
+        }
+
+        String functionName = functionDefinition.getName();
+
+        methodBuilder.returns(TypeName.get(String.class));
+
+        methodBuilder.addStatement(
+                "final $T function = new $T(\n$N, \n$T.<$T>asList($L), \n$T"
+                        + ".<$T<?>>emptyList())",
+                Function.class,
+                Function.class,
+                funcNameToConst(functionName, useUpperCase),
+                Arrays.class,
+                Type.class,
+                inputParams,
+                Collections.class,
+                TypeReference.class);
+        methodBuilder.addStatement("return org.web3j.abi.FunctionEncoder.encode(function)");
+    }
+
     TypeSpec buildEventResponseObject(
             String className,
             List<org.web3j.codegen.SolidityFunctionWrapper.NamedTypeName> indexedParameters,
diff --git a/codegen/src/test/java/org/web3j/codegen/SolidityFunctionWrapperTest.java b/codegen/src/test/java/org/web3j/codegen/SolidityFunctionWrapperTest.java
index 9887d807d..8c56ed71b 100644
--- a/codegen/src/test/java/org/web3j/codegen/SolidityFunctionWrapperTest.java
+++ b/codegen/src/test/java/org/web3j/codegen/SolidityFunctionWrapperTest.java
@@ -44,7 +44,6 @@
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.junit.jupiter.api.Assertions.assertThrows;
-import static org.junit.jupiter.api.Assertions.assertTrue;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
 import static org.web3j.codegen.SolidityFunctionWrapper.buildTypeName;
@@ -373,7 +372,9 @@ public void testBuildFunctionConstantInvalid() throws Exception {
                         false);
 
         List<MethodSpec> methodSpecs = solidityFunctionWrapper.buildFunctions(functionDefinition);
-        assertTrue(methodSpecs.isEmpty());
+        assertEquals(
+                methodSpecs.size(),
+                1); // The normal function gen will fail. The rlp generator will work regardless.
     }
 
     @Test
